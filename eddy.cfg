#################################################################
#################################################################
#########  ______ _____ _____   _____    _     _         ########
#########  | ___ \_   _|_   _| |  ___|  | |   | |        ########
#########  | |_/ / | |   | |   | |__  __| | __| |_   _   ########
#########  | ___ \ | |   | |   |  __|/ _` |/ _` | | | |  ########
#########  | |_/ / | |   | |   | |__| (_| | (_| | |_| |  ########
#########  \____/  \_/   \_/   \____/\__,_|\__,_|\__, |  ########
#########                                         __/ |  ########
#########                                        |___/   ########
#########                                                ########
#################################################################
#################################################################

[mcu eddy]
canbus_uuid: 7cb15e565ae4

[save_variables]
filename: ~/printer_data/config/variables.cfg

[force_move]
enable_force_move: True

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 2.5
#i2c_address:
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: 0
y_offset: 21.42
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2




# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro G28]
rename_existing: G28.1
gcode:
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}




# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg





#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3213839.781,0.090000:3213483.029,0.130000:3213123.282,
#*# 	0.170000:3212763.747,0.210000:3212425.163,0.250000:3212077.536,
#*# 	0.290000:3211716.492,0.330000:3211377.320,0.370000:3211053.588,
#*# 	0.410000:3210728.765,0.450000:3210405.598,0.490000:3210103.074,
#*# 	0.530000:3209808.350,0.570000:3209482.215,0.610000:3209186.865,
#*# 	0.650000:3208892.650,0.690000:3208596.536,0.730000:3208322.829,
#*# 	0.770000:3208025.856,0.810000:3207736.108,0.850000:3207481.900,
#*# 	0.890000:3207239.385,0.930000:3206957.513,0.970000:3206686.315,
#*# 	1.010000:3206433.211,1.050000:3206193.903,1.090000:3205935.993,
#*# 	1.130000:3205700.022,1.170000:3205451.125,1.210000:3205226.133,
#*# 	1.250000:3204994.842,1.290000:3204764.199,1.330000:3204526.339,
#*# 	1.370000:3204313.487,1.410000:3204087.252,1.450000:3203868.559,
#*# 	1.490000:3203671.850,1.530000:3203467.097,1.570000:3203262.083,
#*# 	1.610000:3203047.879,1.650000:3202841.697,1.690000:3202674.290,
#*# 	1.730000:3202463.075,1.770000:3202275.846,1.810000:3202079.828,
#*# 	1.850000:3201899.377,1.890000:3201725.532,1.930000:3201550.359,
#*# 	1.970000:3201382.928,2.010000:3201204.889,2.050000:3201021.720,
#*# 	2.090000:3200867.686,2.130000:3200690.875,2.170000:3200517.662,
#*# 	2.210000:3200360.842,2.250000:3200211.266,2.290000:3200054.677,
#*# 	2.330000:3199876.297,2.370000:3199732.093,2.410000:3199576.501,
#*# 	2.450000:3199433.126,2.490000:3199283.861,2.530000:3199160.537,
#*# 	2.570000:3199016.540,2.610000:3198881.218,2.650000:3198730.184,
#*# 	2.690000:3198604.508,2.730000:3198480.826,2.770000:3198328.600,
#*# 	2.810000:3198212.475,2.850000:3198075.036,2.890000:3197960.965,
#*# 	2.930000:3197835.242,2.970000:3197724.840,3.010000:3197596.718,
#*# 	3.050000:3197477.970,3.090000:3197376.294,3.130000:3197252.607,
#*# 	3.170000:3197134.359,3.210000:3197028.799,3.250000:3196906.447,
#*# 	3.290000:3196781.593,3.330000:3196684.429,3.370000:3196585.279,
#*# 	3.410000:3196479.397,3.450000:3196392.183,3.490000:3196271.198,
#*# 	3.530000:3196186.811,3.570000:3196075.739,3.610000:3195989.311,
#*# 	3.650000:3195875.831,3.690000:3195790.762,3.730000:3195696.006,
#*# 	3.770000:3195607.606,3.810000:3195505.755,3.850000:3195422.350,
#*# 	3.890000:3195324.624,3.930000:3195240.707,3.970000:3195167.835,
#*# 	4.010000:3195062.835,4.050000:3194989.326
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 57.901629
#*# drift_calibration =
#*# 	3271344.292089, -371.727175, 1.608273
#*# 	3258395.389499, -356.356320, 1.532509
#*# 	3246787.236683, -297.533319, 1.121591
#*# 	3236494.865247, -225.672045, 0.646040
#*# 	3227811.162559, -163.345514, 0.261025
#*# 	3220556.058923, -109.294426, -0.075571
#*# 	3215102.079405, -82.978477, -0.192341
#*# 	3210640.435782, -63.074366, -0.275050
#*# 	3207008.364137, -47.066685, -0.343410
#*# drift_calibration_min_temp = 37.90817774126796
